/* 
Написать программу обработки одномерного массива с n элементами, в соответствии с
вариантом (приложение А). Необходимые действия должны производиться в
функции processArray(), возвращающей определенное значение и формирующей
еще один (выходной) массив данных (см. свой вариант). Память под массивы
выделять статически (объявлять массивы локально в функции main) и для доступа к
элементам использовать индексы. Ввод-вывод данных организовать средствами cstdio

Вариант 3

Объявить массив из n=10 целых чисел, проинициализировать нулями. Функция
processArray() должна заполнить массив членами геометрической прогрессии с
начальным элементом b1 и шагом q (ввести с клавиатуры), подсчитать и вернуть cnt –
количество всех трехзначных элементов массива, а также сформировать выходной
массив, который содержит все элементы исходного, кроме тех, которые делятся на 3 с
остатком 1. Вывести на экран массивы.
Вход: b1 = 2 q = 5 [ 2 10 50 250 1250 6250 31250 156250 781250 3906250 ]
Выход: [ 2 50 1250 31250 781250 ] cnt = 1

*/

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

const int n = 10; //количество элементов массива
int processArray(long int* first, long int* second, int* count_arr2);
void printArray(long int* array, int N);

int main() 
{
	
	long int first[n] = { 0 };	//объявляем первый массив, инициируя нулями
	long int second[n];			//объявляем второй массив
	int count_arr2;			// количество выводимых элементов второго массива
	int cnt = processArray(first,second,&count_arr2);			

	printArray(first, n);
	printArray(second, count_arr2);
	printf("cnt = %i", cnt);
}

int processArray(long int* first,long int* second, int* count_arr2)
{
	int b1;				// начальный элемент b1
	int q;				// шаг q, который вводится с клавиатуры
	int count = 0;		// количество всех трехзначных элементов массива
	int x = 0;			// количество выводимых элементов второго массива

	printf("Input q:"); // Вывод на экран "Input q:"
	scanf("%i", &q);	// Ввод с клавиатуры целое число типа int со знаком в десятичной системе счисления в адрес q

	printf("\nInput b1:"); // Вывод на экран "Input b1:"
	scanf("%i", &b1);	// Ввод с клавиатуры целое число типа int со знаком в десятичной системе счисления в адрес b1

	first[0] = b1;		// Начальный элемент массива равен b1
	if (first[0] % 3 != 1)
	{
		second[x] = first[0]; //если первый элемент не делится на 3 с остатком 1, то записываем во 2 массив
		x++;
		*count_arr2 = x;
	}

	for (int i = 1; i < n; i++)
	{
		first[i] = first[i - 1] * q; // заполнение массива членами геометрической прогрессии 

		if (first[i] / 100 > 0 && first[i] / 100 < 10)
		{
			count++;		//если элемент трехзначный, то считаем его
		}

		if (first[i] % 3 != 1)
		{
			second[x] = first[i]; //если элемент не делится на 3 с остатком 1, то записываем во 2 массив
			x++;
			*count_arr2 = x;
		}
	}

	return count;
}

void printArray(long int* array, int N)
{
	for (int i = 0; i < N; ++i)
	{
		printf("%2li", array[i]);
		printf(" ");
	}
	printf("\n");
}